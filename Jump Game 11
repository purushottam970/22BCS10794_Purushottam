class Solution {
public:
    int jump(vector<int>& nums) {
        int n = nums.size();
        int jumps = 0;
        int currentEnd = 0;
        int farthest = 0;

        for (int i = 0; i < n - 1; ++i) {
            farthest = max(farthest, i + nums[i]);  // Update the farthest reachable index

            if (i == currentEnd) {  // If we've reached the end of the current jump's range
                jumps++;  // Increment jump count
                currentEnd = farthest;  // Update the current jump's end range
            }

            if (currentEnd >= n - 1) {  // If we can reach the last index
                break;
            }
        }

        return jumps;
        
    }
};
